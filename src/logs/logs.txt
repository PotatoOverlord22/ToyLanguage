ProgramState:
Execution Stack: 
{Reference(int) v;{new(v, 20);{Reference(Reference(int)) a;{skip step;{new(v, 30);{print(heapRead(heapRead(a)));new(v, 90)}}}}}}
SymbolTable: 
Output: 
FileTable: 
Heap: 


ProgramState:
Execution Stack: 
Reference(int) v
{new(v, 20);{Reference(Reference(int)) a;{skip step;{new(v, 30);{print(heapRead(heapRead(a)));new(v, 90)}}}}}
SymbolTable: 
Output: 
FileTable: 
Heap: 


ProgramState:
Execution Stack: 
Reference(int) v
{new(v, 20);{Reference(Reference(int)) a;{skip step;{new(v, 30);{print(heapRead(heapRead(a)));new(v, 90)}}}}}
SymbolTable: 
Output: 
FileTable: 
Heap: 


ProgramState:
Execution Stack: 
{new(v, 20);{Reference(Reference(int)) a;{skip step;{new(v, 30);{print(heapRead(heapRead(a)));new(v, 90)}}}}}
SymbolTable: 
v => (0, int)
Output: 
FileTable: 
Heap: 


ProgramState:
Execution Stack: 
{new(v, 20);{Reference(Reference(int)) a;{skip step;{new(v, 30);{print(heapRead(heapRead(a)));new(v, 90)}}}}}
SymbolTable: 
v => (0, int)
Output: 
FileTable: 
Heap: 


ProgramState:
Execution Stack: 
new(v, 20)
{Reference(Reference(int)) a;{skip step;{new(v, 30);{print(heapRead(heapRead(a)));new(v, 90)}}}}
SymbolTable: 
v => (0, int)
Output: 
FileTable: 
Heap: 


ProgramState:
Execution Stack: 
new(v, 20)
{Reference(Reference(int)) a;{skip step;{new(v, 30);{print(heapRead(heapRead(a)));new(v, 90)}}}}
SymbolTable: 
v => (0, int)
Output: 
FileTable: 
Heap: 


ProgramState:
Execution Stack: 
{Reference(Reference(int)) a;{skip step;{new(v, 30);{print(heapRead(heapRead(a)));new(v, 90)}}}}
SymbolTable: 
v => (1, int)
Output: 
FileTable: 
Heap: 
1 => 20


ProgramState:
Execution Stack: 
{Reference(Reference(int)) a;{skip step;{new(v, 30);{print(heapRead(heapRead(a)));new(v, 90)}}}}
SymbolTable: 
v => (1, int)
Output: 
FileTable: 
Heap: 
1 => 20


ProgramState:
Execution Stack: 
Reference(Reference(int)) a
{skip step;{new(v, 30);{print(heapRead(heapRead(a)));new(v, 90)}}}
SymbolTable: 
v => (1, int)
Output: 
FileTable: 
Heap: 
1 => 20


ProgramState:
Execution Stack: 
Reference(Reference(int)) a
{skip step;{new(v, 30);{print(heapRead(heapRead(a)));new(v, 90)}}}
SymbolTable: 
v => (1, int)
Output: 
FileTable: 
Heap: 
1 => 20


ProgramState:
Execution Stack: 
{skip step;{new(v, 30);{print(heapRead(heapRead(a)));new(v, 90)}}}
SymbolTable: 
a => (0, Reference(int))
v => (1, int)
Output: 
FileTable: 
Heap: 
1 => 20


ProgramState:
Execution Stack: 
{skip step;{new(v, 30);{print(heapRead(heapRead(a)));new(v, 90)}}}
SymbolTable: 
a => (0, Reference(int))
v => (1, int)
Output: 
FileTable: 
Heap: 
1 => 20


ProgramState:
Execution Stack: 
skip step
{new(v, 30);{print(heapRead(heapRead(a)));new(v, 90)}}
SymbolTable: 
a => (0, Reference(int))
v => (1, int)
Output: 
FileTable: 
Heap: 
1 => 20


ProgramState:
Execution Stack: 
skip step
{new(v, 30);{print(heapRead(heapRead(a)));new(v, 90)}}
SymbolTable: 
a => (0, Reference(int))
v => (1, int)
Output: 
FileTable: 
Heap: 
1 => 20


ProgramState:
Execution Stack: 
{new(v, 30);{print(heapRead(heapRead(a)));new(v, 90)}}
SymbolTable: 
a => (0, Reference(int))
v => (1, int)
Output: 
FileTable: 
Heap: 
1 => 20


ProgramState:
Execution Stack: 
{new(v, 30);{print(heapRead(heapRead(a)));new(v, 90)}}
SymbolTable: 
a => (0, Reference(int))
v => (1, int)
Output: 
FileTable: 
Heap: 
1 => 20


ProgramState:
Execution Stack: 
new(v, 30)
{print(heapRead(heapRead(a)));new(v, 90)}
SymbolTable: 
a => (0, Reference(int))
v => (1, int)
Output: 
FileTable: 
Heap: 
1 => 20


ProgramState:
Execution Stack: 
new(v, 30)
{print(heapRead(heapRead(a)));new(v, 90)}
SymbolTable: 
a => (0, Reference(int))
v => (1, int)
Output: 
FileTable: 
Heap: 
1 => 20


ProgramState:
Execution Stack: 
{print(heapRead(heapRead(a)));new(v, 90)}
SymbolTable: 
a => (0, Reference(int))
v => (2, int)
Output: 
FileTable: 
Heap: 
1 => 20
2 => 30


ProgramState:
Execution Stack: 
{print(heapRead(heapRead(a)));new(v, 90)}
SymbolTable: 
a => (0, Reference(int))
v => (2, int)
Output: 
FileTable: 
Heap: 
2 => 30


ProgramState:
Execution Stack: 
print(heapRead(heapRead(a)))
new(v, 90)
SymbolTable: 
a => (0, Reference(int))
v => (2, int)
Output: 
FileTable: 
Heap: 
2 => 30


ProgramState:
Execution Stack: 
print(heapRead(heapRead(a)))
new(v, 90)
SymbolTable: 
a => (0, Reference(int))
v => (2, int)
Output: 
FileTable: 
Heap: 
2 => 30


