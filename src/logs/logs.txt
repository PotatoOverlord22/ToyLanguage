ProgramState:
Execution Stack: 
{String varf;{varf=src/logs/test.in;{openFileWithRead(varf);{int varc;{readNumber(varf, varc);{print(varc);closeFile(varf)}}}}}}
SymbolTable: 
Output: 
FileTable: 


ProgramState:
Execution Stack: 
String varf
{varf=src/logs/test.in;{openFileWithRead(varf);{int varc;{readNumber(varf, varc);{print(varc);closeFile(varf)}}}}}
SymbolTable: 
Output: 
FileTable: 


ProgramState:
Execution Stack: 
{varf=src/logs/test.in;{openFileWithRead(varf);{int varc;{readNumber(varf, varc);{print(varc);closeFile(varf)}}}}}
SymbolTable: 
varf => 
Output: 
FileTable: 


ProgramState:
Execution Stack: 
varf=src/logs/test.in
{openFileWithRead(varf);{int varc;{readNumber(varf, varc);{print(varc);closeFile(varf)}}}}
SymbolTable: 
varf => 
Output: 
FileTable: 


ProgramState:
Execution Stack: 
{openFileWithRead(varf);{int varc;{readNumber(varf, varc);{print(varc);closeFile(varf)}}}}
SymbolTable: 
varf => src/logs/test.in
Output: 
FileTable: 


ProgramState:
Execution Stack: 
openFileWithRead(varf)
{int varc;{readNumber(varf, varc);{print(varc);closeFile(varf)}}}
SymbolTable: 
varf => src/logs/test.in
Output: 
FileTable: 


ProgramState:
Execution Stack: 
{int varc;{readNumber(varf, varc);{print(varc);closeFile(varf)}}}
SymbolTable: 
varf => src/logs/test.in
Output: 
FileTable: 
src/logs/test.in, 

ProgramState:
Execution Stack: 
int varc
{readNumber(varf, varc);{print(varc);closeFile(varf)}}
SymbolTable: 
varf => src/logs/test.in
Output: 
FileTable: 
src/logs/test.in, 

ProgramState:
Execution Stack: 
{readNumber(varf, varc);{print(varc);closeFile(varf)}}
SymbolTable: 
varc => 0
varf => src/logs/test.in
Output: 
FileTable: 
src/logs/test.in, 

ProgramState:
Execution Stack: 
readNumber(varf, varc)
{print(varc);closeFile(varf)}
SymbolTable: 
varc => 0
varf => src/logs/test.in
Output: 
FileTable: 
src/logs/test.in, 

ProgramState:
Execution Stack: 
{print(varc);closeFile(varf)}
SymbolTable: 
varc => 123
varf => src/logs/test.in
Output: 
FileTable: 
src/logs/test.in, 

ProgramState:
Execution Stack: 
print(varc)
closeFile(varf)
SymbolTable: 
varc => 123
varf => src/logs/test.in
Output: 
FileTable: 
src/logs/test.in, 

ProgramState:
Execution Stack: 
closeFile(varf)
SymbolTable: 
varc => 123
varf => src/logs/test.in
Output: 
123
FileTable: 
src/logs/test.in, 

ProgramState:
Execution Stack: 
SymbolTable: 
varc => 123
varf => src/logs/test.in
Output: 
123
FileTable: 


ProgramState:
Execution Stack: 
{String varf;{varf=src/logs/test.in;{openFileWithRead(varf);{int varc;{readNumber(varf, varc);{print(varc);{readNumber(src/logs/test2.in, varc);closeFile(varf)}}}}}}}
SymbolTable: 
Output: 
FileTable: 


ProgramState:
Execution Stack: 
String varf
{varf=src/logs/test.in;{openFileWithRead(varf);{int varc;{readNumber(varf, varc);{print(varc);{readNumber(src/logs/test2.in, varc);closeFile(varf)}}}}}}
SymbolTable: 
Output: 
FileTable: 


ProgramState:
Execution Stack: 
{varf=src/logs/test.in;{openFileWithRead(varf);{int varc;{readNumber(varf, varc);{print(varc);{readNumber(src/logs/test2.in, varc);closeFile(varf)}}}}}}
SymbolTable: 
varf => 
Output: 
FileTable: 


ProgramState:
Execution Stack: 
varf=src/logs/test.in
{openFileWithRead(varf);{int varc;{readNumber(varf, varc);{print(varc);{readNumber(src/logs/test2.in, varc);closeFile(varf)}}}}}
SymbolTable: 
varf => 
Output: 
FileTable: 


ProgramState:
Execution Stack: 
{openFileWithRead(varf);{int varc;{readNumber(varf, varc);{print(varc);{readNumber(src/logs/test2.in, varc);closeFile(varf)}}}}}
SymbolTable: 
varf => src/logs/test.in
Output: 
FileTable: 


ProgramState:
Execution Stack: 
openFileWithRead(varf)
{int varc;{readNumber(varf, varc);{print(varc);{readNumber(src/logs/test2.in, varc);closeFile(varf)}}}}
SymbolTable: 
varf => src/logs/test.in
Output: 
FileTable: 


ProgramState:
Execution Stack: 
{int varc;{readNumber(varf, varc);{print(varc);{readNumber(src/logs/test2.in, varc);closeFile(varf)}}}}
SymbolTable: 
varf => src/logs/test.in
Output: 
FileTable: 
src/logs/test.in, 

ProgramState:
Execution Stack: 
int varc
{readNumber(varf, varc);{print(varc);{readNumber(src/logs/test2.in, varc);closeFile(varf)}}}
SymbolTable: 
varf => src/logs/test.in
Output: 
FileTable: 
src/logs/test.in, 

ProgramState:
Execution Stack: 
{readNumber(varf, varc);{print(varc);{readNumber(src/logs/test2.in, varc);closeFile(varf)}}}
SymbolTable: 
varc => 0
varf => src/logs/test.in
Output: 
FileTable: 
src/logs/test.in, 

ProgramState:
Execution Stack: 
readNumber(varf, varc)
{print(varc);{readNumber(src/logs/test2.in, varc);closeFile(varf)}}
SymbolTable: 
varc => 0
varf => src/logs/test.in
Output: 
FileTable: 
src/logs/test.in, 

ProgramState:
Execution Stack: 
{print(varc);{readNumber(src/logs/test2.in, varc);closeFile(varf)}}
SymbolTable: 
varc => 123
varf => src/logs/test.in
Output: 
FileTable: 
src/logs/test.in, 

ProgramState:
Execution Stack: 
print(varc)
{readNumber(src/logs/test2.in, varc);closeFile(varf)}
SymbolTable: 
varc => 123
varf => src/logs/test.in
Output: 
FileTable: 
src/logs/test.in, 

ProgramState:
Execution Stack: 
{readNumber(src/logs/test2.in, varc);closeFile(varf)}
SymbolTable: 
varc => 123
varf => src/logs/test.in
Output: 
123
FileTable: 
src/logs/test.in, 

ProgramState:
Execution Stack: 
readNumber(src/logs/test2.in, varc)
closeFile(varf)
SymbolTable: 
varc => 123
varf => src/logs/test.in
Output: 
123
FileTable: 
src/logs/test.in, 

ProgramState:
Execution Stack: 
{String varf;{varf=src/logs/test.in;{openFileWithRead(varf);{int varc;{readNumber(varf, varc);{print(varc);closeFile(varf)}}}}}}
SymbolTable: 
Output: 
FileTable: 


ProgramState:
Execution Stack: 
String varf
{varf=src/logs/test.in;{openFileWithRead(varf);{int varc;{readNumber(varf, varc);{print(varc);closeFile(varf)}}}}}
SymbolTable: 
Output: 
FileTable: 


ProgramState:
Execution Stack: 
{varf=src/logs/test.in;{openFileWithRead(varf);{int varc;{readNumber(varf, varc);{print(varc);closeFile(varf)}}}}}
SymbolTable: 
varf => 
Output: 
FileTable: 


ProgramState:
Execution Stack: 
varf=src/logs/test.in
{openFileWithRead(varf);{int varc;{readNumber(varf, varc);{print(varc);closeFile(varf)}}}}
SymbolTable: 
varf => 
Output: 
FileTable: 


ProgramState:
Execution Stack: 
{openFileWithRead(varf);{int varc;{readNumber(varf, varc);{print(varc);closeFile(varf)}}}}
SymbolTable: 
varf => src/logs/test.in
Output: 
FileTable: 


ProgramState:
Execution Stack: 
openFileWithRead(varf)
{int varc;{readNumber(varf, varc);{print(varc);closeFile(varf)}}}
SymbolTable: 
varf => src/logs/test.in
Output: 
FileTable: 


ProgramState:
Execution Stack: 
{int varc;{readNumber(varf, varc);{print(varc);closeFile(varf)}}}
SymbolTable: 
varf => src/logs/test.in
Output: 
FileTable: 
src/logs/test.in, 

ProgramState:
Execution Stack: 
int varc
{readNumber(varf, varc);{print(varc);closeFile(varf)}}
SymbolTable: 
varf => src/logs/test.in
Output: 
FileTable: 
src/logs/test.in, 

ProgramState:
Execution Stack: 
{readNumber(varf, varc);{print(varc);closeFile(varf)}}
SymbolTable: 
varc => 0
varf => src/logs/test.in
Output: 
FileTable: 
src/logs/test.in, 

ProgramState:
Execution Stack: 
readNumber(varf, varc)
{print(varc);closeFile(varf)}
SymbolTable: 
varc => 0
varf => src/logs/test.in
Output: 
FileTable: 
src/logs/test.in, 

ProgramState:
Execution Stack: 
{print(varc);closeFile(varf)}
SymbolTable: 
varc => 123
varf => src/logs/test.in
Output: 
FileTable: 
src/logs/test.in, 

ProgramState:
Execution Stack: 
print(varc)
closeFile(varf)
SymbolTable: 
varc => 123
varf => src/logs/test.in
Output: 
FileTable: 
src/logs/test.in, 

ProgramState:
Execution Stack: 
closeFile(varf)
SymbolTable: 
varc => 123
varf => src/logs/test.in
Output: 
123
FileTable: 
src/logs/test.in, 

ProgramState:
Execution Stack: 
SymbolTable: 
varc => 123
varf => src/logs/test.in
Output: 
123
FileTable: 


